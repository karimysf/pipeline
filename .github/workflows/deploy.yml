name: Docker Image CI/CD

on:
  push:
    paths:
      - 'src/index.html'
  workflow_dispatch:
env: 
  IMAGE_NAME: fevertokens-technical-assesst
  TAG: latest
  WORKER_NODE_ROLE: worker
  MANAGER_IP: ${{ vars.MANAGER_IP }}
  WORKER_IP: ${{ vars.WORKER_IP }}
  MANAGER_HOST: ${{ vars.MANAGER_HOST }}  
  SSH_PORT: ${{ vars.SSH_PORT }}
  DOCKER_HOST: "tcp://ip172-18-0-48:37862"
jobs:

  build:

    runs-on: ubuntu-latest

    steps:

    - name : check the repo
      uses: actions/checkout@v4

    - name: Building the Docker image
      run: docker build -t fever-token:latest -f src/Dockerfile src

    - name: Build the docker image
      run: docker tag fever-token:latest  ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
    - name: Login to dockerhub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Push image to dockerhub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}


  deploy: 
    runs-on: ubuntu-latest
    needs: [build]

    steps: 
    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        ssh-keygen -t ed25519 -P "" -f ~/.ssh/id_ed25519
        echo "SSH Public Key:"
        cat ~/.ssh/id_ed25519.pub

    - name: Configure SSH Access
      run: |
        echo "Testing connection to $MANAGER_HOST:$SSH_PORT..."
        nc -zv $MANAGER_HOST $SSH_PORT || echo "Port test failed - check PWD session"
        
        ssh-keyscan -p $SSH_PORT -H $MANAGER_HOST >> ~/.ssh/known_hosts
        ssh -o ConnectTimeout=20 -i ~/.ssh/id_ed25519 -p $SSH_PORT \
          docker@$MANAGER_HOST "echo 'SSH connection successful'" || exit 1

    - name: Deploy Stack
      run: |
        ssh -i ~/.ssh/id_ed25519 -p $SSH_PORT docker@$MANAGER_HOST "
          docker stack deploy -c - app_stack <<EOF
          version: '3.8'
          services:
            web:
              image: ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$TAG
              deploy:
                placement:
                  constraints: [node.role == worker]
              ports:
                - \"80:80\"
          EOF
        "