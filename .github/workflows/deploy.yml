name: Docker Image CI/CD

on:
  push:
    branches:
      - master
    
  workflow_dispatch:

env: 
  IMAGE_NAME: fevertokens-technical-assesst
  TAG: latest

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Building the Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }} -f src/Dockerfile src
    
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
        
    - name: Push image to DockerHub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}

  deploy: 
    runs-on: self-hosted
    needs: [build]
    steps: 
    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Generate SSH key
      run: |
        ssh-keygen -t ed25519 -P "" -f ~/.ssh/id_ed25519 -y
        echo "Public key that should be added to PWD nodes:"
        cat ~/.ssh/id_ed25519.pub

    - name: Deploy to Docker Swarm
      env:
        MANAGER_IP: ${{ vars.MANAGER_IP }}
        WORKER_IP: ${{ vars.WORKER_IP }}
        MANAGER_HOST: ${{ vars.MANAGER_HOST }}
        SSH_PORT: ${{ vars.SSH_PORT }}
      run: |
          

          # Extract host from MANAGER_HOST
          HOSTNAME=${MANAGER_HOST#*@}
          #echo "HOSTNAME: $HOSTNAME"
          #echo "MANAGER_HOST: $MANAGER_HOST"

          # Add manager to known hosts
          echo "Adding Hostname to known_hosts"
          ssh-keyscan -H "$HOSTNAME" >> ~/.ssh/known_hosts
          echo "✅ Adding Hostname to known_hosts successfull"

          # Prepare variables for envsubst
          export DOCKERHUB_USERNAME="${{ secrets.DOCKER_USERNAME }}"
          export IMAGE_NAME="${{ env.IMAGE_NAME }}"
          export TAG="${{ env.TAG }}"
          export WORKER_NODE_ROLE="worker"

          # Generate deploy compose file
          envsubst < docker-compose.yml > docker-compose-deploy.yml
          #cat docker-compose-deploy.yml

          # Copy file to manager node
          echo "copying docker compose to manager"
          #sftp -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 -P $SSH_PORT $MANAGER_HOST << EOF
            #put /mnt/d/fevertokens_test/fevertokens-tech-test/docker-compose.yml docker-compose.yml
            #quit
          #EOF
          echo "copying docker compose to manager successfull"

          echo "START SSH PROCEDURES"
          # Connect and deploy
          echo "✅ Connecting to manager"
          ssh -i ~/.ssh/id_ed25519 $MANAGER_HOST 'docker stack deploy -c ~/docker-compose.yml feverTokens-tech-assesst-service'


