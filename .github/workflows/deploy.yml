name: Docker Image CI/CD

on:
  push:
    branches:
      - master
    
  workflow_dispatch:

env: 
  IMAGE_NAME: fevertokens-technical-assesst
  TAG: latest

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Building the Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }} -f src/Dockerfile src
    
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
        
    - name: Push image to DockerHub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}

  deploy: 
    runs-on: ubuntu-latest
    needs: [build]
    steps: 
    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Generate SSH key
      run: |
        ssh-keygen -t ed25519 -P "" -f ~/.ssh/id_ed25519
        echo "Public key that should be added to PWD nodes:"
        cat ~/.ssh/id_ed25519.pub

    - name: Deploy to Docker Swarm
      env:
        MANAGER_IP: ${{ vars.MANAGER_IP }}
        WORKER_IP: ${{ vars.WORKER_IP }}
        MANAGER_HOST: ${{ vars.MANAGER_HOST }}
        SSH_PORT: ${{ vars.SSH_PORT || '22' }}
      run: |
        # Extract hostname from MANAGER_IP since that seems to be the correct value
        HOSTNAME=$MANAGER_IP
        echo "Using hostname: $HOSTNAME"
        
        # Add manager to known hosts
        ssh-keyscan -H $HOSTNAME >> ~/.ssh/known_hosts
        
        # Copy the existing docker-compose file to the manager node
        scp -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 -P $SSH_PORT docker-compose.yml $MANAGER_HOST:~/docker-compose.yml
        
        # Connect and deploy to manager node
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 -P $SSH_PORT $MANAGER_HOST << ENDSSH    
        # Deploy the stack using the uploaded docker-compose file
        docker stack deploy -c docker-compose.yml vietnam-app
          
        # Verify the deployment
        docker stack services vietnam-app
        docker service ls
        ENDSSH