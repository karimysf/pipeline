name: Docker Image CI/CD

on:
  push:
    paths:
      - 'src/index.html'
  workflow_dispatch:
env: 
  IMAGE_NAME: fevertokens-technical-assesst
  TAG: latest
  MANAGER_IP : ip172-18-0-44-d0mtqtq91nsg00fc0d5g.direct.labs.play-with-docker.com
  WORKER_NODE_ROLE: worker
jobs:

  build:

    runs-on: ubuntu-latest

    steps:

    - name : check the repo
      uses: actions/checkout@v4

    - name: Building the Docker image
      run: docker build -t fever-token:latest -f src/Dockerfile src

    - name: Build the docker image
      run: docker tag fever-token:latest  ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
    - name: Login to dockerhub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Push image to dockerhub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}


  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Generate SSH key
      run: |
        ssh-keygen -t ed25519 -P "" -f ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519

    - name: Force update deployment
      run: |
        ssh -o StrictHostKeyChecking=no root@${{ env.MANAGER_IP }} << 'EOF'
        # Remove entire stack if exists
        docker stack rm fevertokens-deployment || true
        
        # Wait for cleanup
        sleep 10
        
        # Pull the exact image we just built
        docker pull ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
        
        # Deploy with registry auth and force new image
        docker stack deploy \
          --with-registry-auth \
          --compose-file docker-compose.yml \
          fevertokens-deployment
        EOF
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        IMAGE_NAME: ${{ env.IMAGE_NAME }}
        TAG: ${{ env.TAG }}
        WORKER_NODE_ROLE: ${{ env.WORKER_NODE_ROLE }}
