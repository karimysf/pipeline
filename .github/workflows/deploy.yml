name: Docker Image CI/CD

on:
  push:
    paths:
      - 'src/index.html'
  workflow_dispatch:
env: 
  IMAGE_NAME: fevertokens-technical-assesst
  TAG: latest
  WORKER_NODE_ROLE: worker
  MANAGER_IP: ${{ vars.MANAGER_IP }}
  WORKER_IP: ${{ vars.WORKER_IP }}
  MANAGER_HOST: ${{ vars.MANAGER_HOST }}  
  SSH_PORT: ${{ vars.SSH_PORT }}          
jobs:

  build:

    runs-on: ubuntu-latest

    steps:

    - name : check the repo
      uses: actions/checkout@v4

    - name: Building the Docker image
      run: docker build -t fever-token:latest -f src/Dockerfile src

    - name: Build the docker image
      run: docker tag fever-token:latest  ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
    - name: Login to dockerhub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Push image to dockerhub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}


  deploy: 
    runs-on: ubuntu-latest
    needs: [build]

    steps: 
    - name: Check out the repo
      uses: actions/checkout@v4

      #generate the ssh key pair
    - name: Generate SSH Key
      run: |
        mkdir -p ~/.ssh
        ssh-keygen -t ed25519 -P "" -f ~/.ssh/id_ed25519
        cat ~/.ssh/id_ed25519.pub

    - name: Add SSH Key to Manager
      run: |
        ssh-keyscan -p $SSH_PORT -H $MANAGER_HOST >> ~/.ssh/known_hosts
        ssh -i ~/.ssh/id_ed25519 -p $SSH_PORT docker@$MANAGER_HOST \
          "mkdir -p ~/.ssh && echo $(cat ~/.ssh/id_ed25519.pub) >> ~/.ssh/authorized_keys"

    - name: Deploy to Swarm
      run: |
        scp -i ~/.ssh/id_ed25519 -P $SSH_PORT \
          docker-compose.yml docker@$MANAGER_HOST:~/docker-compose.yml
        ssh -i ~/.ssh/id_ed25519 -p $SSH_PORT docker@$MANAGER_HOST "
          docker stack rm app_stack || true
          docker stack deploy -c docker-compose.yml app_stack
        "
